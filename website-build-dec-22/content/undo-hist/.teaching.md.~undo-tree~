(undo-tree-save-format-version . 1)
"1609ac3c77ac36b52b831bc105b977f2972d76cb"
[nil nil nil nil (25491 51556 421545 888000) 0 nil]
([nil nil ((55 . 56) (t 25475 18082 690455 426000)) nil (25491 51556 421545 228000) 0 nil])
([nil nil ((82 . 83)) nil (25491 51556 421541 738000) 0 nil])
([nil nil ((nil rear-nonsticky nil 816 . 817) (nil fontified nil 816 . 817) (nil invisible markdown-markup 814 . 816) (nil fontified nil 814 . 816) (nil fontified nil 789 . 814) (nil invisible markdown-markup 787 . 789) (nil fontified nil 787 . 789) (nil fontified nil 786 . 787) (nil fontified nil 785 . 786) (nil fontified nil 783 . 785) (nil fontified nil 776 . 783) (nil invisible markdown-markup 775 . 776) (nil fontified nil 775 . 776) (nil fontified nil 753 . 775) (nil fontified nil 752 . 753) (nil fontified nil 749 . 752) (nil fontified nil 748 . 749) (nil fontified nil 717 . 748) (nil invisible markdown-markup 716 . 717) (nil fontified nil 716 . 717) (nil fontified nil 714 . 716) (nil fontified nil 713 . 714) (nil fontified nil 563 . 713) (nil invisible markdown-markup 561 . 563) (nil fontified nil 561 . 563) (nil fontified nil 525 . 561) (nil invisible markdown-markup 523 . 525) (nil fontified nil 523 . 525) (nil fontified nil 522 . 523) (nil fontified nil 521 . 522) (nil fontified nil 519 . 521) (nil fontified nil 516 . 519) (nil invisible markdown-markup 515 . 516) (nil fontified nil 515 . 516) (nil fontified nil 492 . 515) (nil fontified nil 491 . 492) (nil fontified nil 488 . 491) (nil fontified nil 487 . 488) (nil fontified nil 456 . 487) (nil invisible markdown-markup 455 . 456) (nil fontified nil 455 . 456) (nil fontified nil 217 . 455) (nil fontified nil 216 . 217) (nil fontified nil 98 . 216) (nil invisible markdown-markup 96 . 98) (nil fontified nil 96 . 98) (nil fontified nil 74 . 96) (nil invisible markdown-markup 72 . 74) (nil fontified nil 72 . 74) (nil fontified nil 71 . 72) (nil fontified nil 70 . 71) (70 . 817) (t 25491 51556 432556 844000)) nil (25491 51627 87230 606000) 0 nil])
([nil nil ((#("2" 0 1 (face (markdown-bold-face) font-lock-multiline t markdown-list-item ((70 712 0 2 "- " nil (70 72 70 70 70 71 71 72))) fontified t)) . -80) (undo-tree-id0 . -1) (#("3" 0 1 (face (markdown-bold-face) markdown-list-item ((70 713 0 2 "- " nil (70 72 70 70 70 71 71 72))) fontified t)) . -81) (undo-tree-id1 . -1) 82 (t 25491 51627 101175 530000)) nil (25491 51652 198737 744000) 0 nil])
([nil nil ((80 . 82)) nil (25491 51652 198724 834000) 0 nil])
([nil nil ((84 . 99)) nil (25491 51652 198724 564000) 0 nil])
([nil nil ((#("s" 0 1 (face (markdown-bold-face) font-lock-multiline t markdown-list-item ((70 721 0 2 "- " nil (70 72 70 70 70 71 71 72))) fontified t)) . 99) (#("u" 0 1 (face (markdown-bold-face) font-lock-multiline t markdown-list-item ((70 722 0 2 "- " nil (70 72 70 70 70 71 71 72))) fontified t)) . 99) (#("l" 0 1 (face (markdown-bold-face) markdown-list-item ((70 723 0 2 "- " nil (70 72 70 70 70 71 71 72))) fontified t)) . 99) (#("u" 0 1 (face (markdown-bold-face) font-lock-multiline t markdown-list-item ((70 724 0 2 "- " nil (70 72 70 70 70 71 71 72))) fontified t)) . 99) (#("c" 0 1 (face (markdown-bold-face) font-lock-multiline t markdown-list-item ((70 725 0 2 "- " nil (70 72 70 70 70 71 71 72))) fontified t)) . 99) (#("l" 0 1 (face (markdown-bold-face) markdown-list-item ((70 726 0 2 "- " nil (70 72 70 70 70 71 71 72))) fontified t)) . 99) (#("a" 0 1 (face (markdown-bold-face) font-lock-multiline t markdown-list-item ((70 727 0 2 "- " nil (70 72 70 70 70 71 71 72))) fontified t)) . 99) (#("C" 0 1 (face (markdown-bold-face) font-lock-multiline t markdown-list-item ((70 728 0 2 "- " nil (70 72 70 70 70 71 71 72))) fontified t)) . 99)) nil (25491 51652 198723 934000) 0 nil])
([nil nil ((#(" " 0 1 (face (markdown-bold-face) markdown-list-item ((70 720 0 2 "- " nil (70 72 70 70 70 71 71 72))) fontified t)) . -99)) nil (25491 51652 198723 14000) 0 nil])
([nil nil ((#("I" 0 1 (face (markdown-bold-face) font-lock-multiline t markdown-list-item ((70 718 0 2 "- " nil (70 72 70 70 70 71 71 72))) fontified t)) . 99) (#("I" 0 1 (face (markdown-bold-face) font-lock-multiline t markdown-list-item ((70 719 0 2 "- " nil (70 72 70 70 70 71 71 72))) fontified t)) . 99)) nil (25491 51652 198722 644000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t markdown-list-item ((523 717 2 4 "- " nil (523 527 523 525 525 526 526 527))))) . -523) 552) nil (25491 51652 198722 114000) 0 nil])
([nil nil ((785 . 791) (#("  " 0 2 (fontified t markdown-list-item ((785 818 2 4 "- " nil (785 789 785 787 787 788 788 789))))) . 785) 812) nil (25491 51652 198721 364000) 0 nil])
([nil nil ((#("      " 0 6 (face markdown-pre-face markdown-pre (785 822) fontified t)) . -785) 816) nil (25491 51652 198717 444000) 0 nil])
([nil nil ((104 . 105) (#(" " 0 1 (markdown-list-item ((70 521 0 2 "- " nil (70 72 70 70 70 71 71 72))) fontified nil)) . -104) (103 . 104) (t 25491 51652 205389 390000)) nil (25491 51670 135570 54000) 0 nil])
([nil nil ((567 . 568) (t 25491 51670 149542 255000)) nil (25491 51686 120310 361000) 0 nil])
([nil nil ((568 . 570)) nil (25491 51686 120306 141000) 0 nil])
([nil nil ((105 . 109) (t 25491 51686 133678 426000)) nil (25491 51697 657317 608000) 0 nil])
([nil nil ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . -104) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -5) (undo-tree-id13 . -1) (undo-tree-id14 . -5) (undo-tree-id15 . -5) (undo-tree-id16 . -5) (undo-tree-id17 . -5)) nil (25491 51697 657317 158000) 0 nil])
([nil nil ((104 . 106)) nil (25491 51697 657313 888000) 0 nil])
([nil nil ((104 . 108) (#("  " 0 2 (markdown-list-item ((70 522 0 2 "- " nil (70 72 70 70 70 71 71 72))) fontified t)) . 104) (undo-tree-id2 . -2) (undo-tree-id3 . -2) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (undo-tree-id6 . -2) 106) nil (25491 51697 657311 838000) 0 nil])
([nil nil ((108 . 113) (t 25491 51697 669776 698000)) nil (25491 51701 550383 896000) 0 nil])
([nil nil ((578 . 581) (t 25491 51701 561809 855000)) nil (25491 51707 742481 810000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -732) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (t 25491 51707 753862 605000)) nil (25491 51712 62714 671000) 0 nil])
([nil nil ((732 . 736)) nil (25491 51712 62701 831000) 0 nil])
([nil nil ((892 . 894) (890 . 891) (t 25491 51712 77899 348000)) nil (25491 51723 807924 759000) 0 nil])
([nil nil ((893 . 898) (#(" " 0 1 (fontified t)) . 893) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 894) nil (25491 51723 807921 969000) 0 nil])
([nil nil ((1362 . 1368) (t 25491 51723 825997 847000)) nil (25491 51738 846795 846000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1519) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (t 25491 51738 858123 882000)) nil (25491 51742 360523 737000) 0 nil])
([nil nil ((1519 . 1523)) nil (25491 51742 360513 297000) 0 nil])
([nil nil ((1368 . 1369) (t 25491 51742 374153 363000)) nil (25491 51752 15511 258000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1368) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 1369) nil (25491 51752 15510 788000) 0 nil])
([nil nil ((1366 . 1372) (#("  " 0 2 (fontified t)) . 1366) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -2) (undo-tree-id38 . -2) 1368) nil (25491 51752 15507 38000) 0 nil])
([nil nil ((27 . 28) (t 25491 51752 34234 357000)) nil (25491 51770 984504 174000) 0 nil])
([nil nil ((837 . 842) (t 25491 51770 998393 364000)) nil (25491 51977 938763 661000) 0 nil])
([nil nil ((apply yas--snippet-revive 837 882 #s(yas--snippet nil nil nil 1 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 1 nil nil nil nil)) (837 . 882) (#("fixit" 0 5 (fontified t)) . 837) (undo-tree-id44 . -5) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -2) (undo-tree-id48 . -1) (undo-tree-id49 . -2) (undo-tree-id50 . -3) (undo-tree-id51 . -2) (undo-tree-id52 . -3) (undo-tree-id53 . -4) (undo-tree-id54 . -3) (undo-tree-id55 . -4) (undo-tree-id56 . -5) (undo-tree-id57 . -4) (undo-tree-id58 . -5) 842) nil (25491 51977 938760 761000) 0 nil])
([nil nil ((800 . 805) (t 25491 51977 952112 112000)) nil (25491 51987 729667 175000) 0 nil])
([nil nil ((apply yas--snippet-revive 800 845 #s(yas--snippet nil nil nil 2 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 2 nil nil nil nil)) (800 . 845) (#("fixit" 0 5 (fontified t)) . 800) (undo-tree-id59 . -5) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -2) (undo-tree-id63 . -1) (undo-tree-id64 . -2) (undo-tree-id65 . -3) (undo-tree-id66 . -2) (undo-tree-id67 . -3) (undo-tree-id68 . -4) (undo-tree-id69 . -3) (undo-tree-id70 . -4) (undo-tree-id71 . -5) (undo-tree-id72 . -4) (undo-tree-id73 . -5) (undo-tree-id74 . -5) (undo-tree-id75 . -5) (undo-tree-id76 . -5) (undo-tree-id77 . -5) 805) nil (25491 51987 729664 134000) 0 nil])
([nil nil ((1719 . 1723) (t 25491 51987 740192 796000)) nil (25491 52013 617193 916000) 0 nil])
([nil nil ((1719 . 1720) 1723) nil (25491 52013 617193 506000) 0 nil])
([nil nil ((#("i" 0 1 (markdown-list-item ((1685 1721 2 4 "- " nil (1685 1689 1685 1687 1687 1688 1688 1689))) fontified t)) . -1720) (undo-tree-id81 . -1) (#("x" 0 1 (markdown-list-item ((1685 1722 2 4 "- " nil (1685 1689 1685 1687 1687 1688 1688 1689))) fontified t)) . -1721) (undo-tree-id82 . -1) (#("i" 0 1 (markdown-list-item ((1685 1723 2 4 "- " nil (1685 1689 1685 1687 1687 1688 1688 1689))) fontified t)) . -1722) (undo-tree-id83 . -1) (#("t" 0 1 (markdown-list-item ((1685 1724 2 4 "- " nil (1685 1689 1685 1687 1687 1688 1688 1689))) fontified t)) . -1723) (undo-tree-id84 . -1) 1724) nil (25491 52013 617192 496000) 0 nil])
([nil nil ((1720 . 1725)) nil (25491 52013 617189 816000) 0 nil])
([nil nil ((apply yas--snippet-revive 1720 1765 #s(yas--snippet nil nil nil 3 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 3 nil nil nil nil)) (1720 . 1765) (#("fixit" 0 5 (markdown-list-item ((1685 1725 2 4 "- " nil (1685 1689 1685 1687 1687 1688 1688 1689))) fontified t)) . 1720) (undo-tree-id78 . -5) (undo-tree-id79 . -5) (undo-tree-id80 . -4) 1725) nil (25491 52013 617186 556000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t)) . -1772) (undo-tree-id2 . -1) (#("e" 0 1 (fontified t)) . -1773) (undo-tree-id3 . -1) (#("r" 0 1 (fontified t)) . -1774) (undo-tree-id4 . -1) (#("e" 0 1 (fontified t)) . -1775) (undo-tree-id5 . -1) (#(" " 0 1 (fontified t)) . -1776) (undo-tree-id6 . -1) (#("i" 0 1 (fontified t)) . -1777) (undo-tree-id7 . -1) (#("s" 0 1 (fontified t)) . -1778) (undo-tree-id8 . -1) (#(" " 0 1 (fontified t)) . -1779) (undo-tree-id9 . -1) (#("a" 0 1 (fontified t)) . -1780) (undo-tree-id10 . -1) (#(" " 0 1 (fontified t)) . -1781) (undo-tree-id11 . -1) (#("l" 0 1 (fontified t)) . -1782) (undo-tree-id12 . -1) (#("i" 0 1 (fontified t)) . -1783) (undo-tree-id13 . -1) (#("s" 0 1 (fontified t)) . -1784) (undo-tree-id14 . -1) (#("t" 0 1 (fontified t)) . -1785) (undo-tree-id15 . -1) (#(" " 0 1 (fontified t)) . -1786) (undo-tree-id16 . -1) (#("o" 0 1 (fontified t)) . -1787) (undo-tree-id17 . -1) (#("f" 0 1 (fontified t)) . -1788) (undo-tree-id18 . -1) 1789 (t 25491 52013 628406 128000)) nil (25491 53339 117612 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1772)) nil (25491 53339 117606 170000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) mouse-face markdown-highlight-face font-lock-multiline t help-echo "\"past-teaching\"
{{< ref" face markdown-link-face)) . -1778) (undo-tree-id1 . -1) 1779) nil (25491 53339 117605 810000) 0 nil])
([nil nil ((1778 . 1779)) nil (25491 53339 117604 830000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) mouse-face markdown-highlight-face font-lock-multiline t help-echo "\"past-teaching\"
{{< ref" face markdown-link-face)) . -1773) (undo-tree-id0 . -1) 1774) nil (25491 53339 117604 80000) 0 nil])
([nil nil ((1773 . 1774)) nil (25491 53339 117590 840000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) mouse-face markdown-highlight-face font-lock-multiline t help-echo "\"past-teaching\"
{{< ref" face markdown-link-face)) . -1778) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("o" 0 1 (fontified t keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) mouse-face markdown-highlight-face font-lock-multiline t help-echo "\"past-teaching\"
{{< ref" face markdown-link-face)) . -1779) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("u" 0 1 (fontified t keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) mouse-face markdown-highlight-face font-lock-multiline t help-echo "\"past-teaching\"
{{< ref" face markdown-link-face)) . -1780) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("r" 0 1 (fontified t keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) mouse-face markdown-highlight-face font-lock-multiline t help-echo "\"past-teaching\"
{{< ref" face markdown-link-face)) . -1781) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (#("s" 0 1 (fontified t keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) mouse-face markdown-highlight-face font-lock-multiline t help-echo "\"past-teaching\"
{{< ref" face markdown-link-face)) . -1782) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#("e" 0 1 (fontified t keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) mouse-face markdown-highlight-face font-lock-multiline t help-echo "\"past-teaching\"
{{< ref" face markdown-link-face)) . -1783) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#("s" 0 1 (fontified t keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) mouse-face markdown-highlight-face font-lock-multiline t help-echo "\"past-teaching\"
{{< ref" face markdown-link-face)) . -1784) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) 1785 (t 25491 53339 135284 514000)) nil (25491 53364 500540 46000) 0 nil])
([nil nil ((1778 . 1786)) nil (25491 53364 500440 285000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face markdown-italic-face) markdown-list-item ((71 526 0 2 "- " nil (71 73 71 71 71 72 72 73))) fontified t)) . 501) (#("0" 0 1 (face (markdown-italic-face) markdown-list-item ((71 527 0 2 "- " nil (71 73 71 71 71 72 72 73))) fontified t)) . 501) (#("." 0 1 (face (markdown-italic-face) markdown-list-item ((71 528 0 2 "- " nil (71 73 71 71 71 72 72 73))) fontified t)) . 501) (#("2" 0 1 (face (markdown-italic-face) markdown-list-item ((71 529 0 2 "- " nil (71 73 71 71 71 72 72 73))) fontified t)) . 501) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face markdown-italic-face) fontified t markdown-list-item ((71 530 0 2 "- " nil (71 73 71 71 71 72 72 73))))) . 501) (undo-tree-id163 . 1) (undo-tree-id164 . -1) (t 25491 53364 519492 791000)) nil (25513 25100 878411 706000) 0 nil])
([nil nil ((#(" " 0 1 (face (markdown-italic-face) fontified t)) . -763) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face markdown-italic-face) fontified t)) . -764) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("2" 0 1 (face (markdown-italic-face) fontified t)) . -765) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . 1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("." 0 1 (face (markdown-italic-face) fontified t)) . -766) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (#("0" 0 1 (face (markdown-italic-face) fontified t)) . -767) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face markdown-italic-face) fontified t markdown-list-item ((528 840 0 2 "- " nil (528 530 528 528 528 529 529 530))))) . -768) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . 1) (undo-tree-id159 . -1) (undo-tree-id160 . 1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) 769) nil (25513 25100 878404 886000) 0 nil])
([nil nil ((#("9" 0 1 (face (markdown-bold-face) fontified t markdown-list-item ((528 840 0 2 "- " nil (528 530 528 528 528 529 529 530))))) . -538) (undo-tree-id166 . -1) (undo-tree-id167 . -1) 539 (t 25513 25100 890235 774000)) nil (25513 25141 343895 144000) 0 nil])
([nil nil ((538 . 539)) nil (25513 25141 343893 194000) 0 nil])
([nil nil ((542 . 563)) nil (25513 25141 343892 914000) 0 nil])
([nil nil ((#("A" 0 1 (face (markdown-bold-face) markdown-list-item ((528 855 0 2 "- " nil (528 530 528 528 528 529 529 530))) fontified t)) . -552) (undo-tree-id165 . -1) 553) nil (25513 25141 343892 464000) 0 nil])
([nil nil ((552 . 553)) nil (25513 25141 343883 534000) 0 nil])
([nil nil ((562 . 583)) nil (25513 25141 343883 254000) 0 nil])
([nil nil ((#(" Foundations" 0 12 (face (markdown-bold-face) markdown-list-item ((528 876 0 2 "- " nil (528 530 528 528 528 529 529 530))) fontified t)) . 583)) nil (25513 25141 343882 874000) 0 nil])
([nil nil ((#(" of" 0 3 (face (markdown-bold-face) font-lock-multiline t markdown-list-item ((528 864 0 2 "- " nil (528 530 528 528 528 529 529 530))) fontified t)) . 583)) nil (25513 25141 343882 324000) 0 nil])
([nil nil ((#(" Mathematics" 0 12 (face (markdown-bold-face) font-lock-multiline t markdown-list-item ((528 861 0 2 "- " nil (528 530 528 528 528 529 529 530))) fontified t)) . 583)) nil (25513 25141 343877 684000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t markdown-list-item ((955 1404 1 3 "- " nil (955 958 955 956 956 957 957 958))) face (markdown-italic-face))) . -1379) (undo-tree-id4 . -1) (#("(" 0 1 (fontified t markdown-list-item ((955 1405 1 3 "- " nil (955 958 955 956 956 957 957 958))) face (rainbow-delimiters-depth-1-face markdown-italic-face))) . -1380) (undo-tree-id5 . -1) (#("2" 0 1 (fontified t markdown-list-item ((955 1406 1 3 "- " nil (955 958 955 956 956 957 957 958))) face (markdown-italic-face))) . -1381) (undo-tree-id6 . -1) (#("." 0 1 (fontified t markdown-list-item ((955 1407 1 3 "- " nil (955 958 955 956 956 957 957 958))) face (markdown-italic-face))) . -1382) (undo-tree-id7 . -1) (#("0" 0 1 (fontified t markdown-list-item ((955 1408 1 3 "- " nil (955 958 955 956 956 957 957 958))) face (markdown-italic-face))) . -1383) (undo-tree-id8 . -1) (#(")" 0 1 (markdown-list-item ((955 1409 1 3 "- " nil (955 958 955 956 956 957 957 958))) fontified t face (rainbow-delimiters-depth-1-face markdown-italic-face))) . -1384) (undo-tree-id9 . -1) (undo-tree-id10 . 1) (undo-tree-id11 . -1) 1385 (t 25513 25141 358585 433000)) nil (25516 3399 293778 885000) 0 nil])
([nil nil ((#(" " 0 1 (markdown-list-item ((1406 1676 2 4 "- " nil (1406 1410 1406 1408 1408 1409 1409 1410))) fontified t face (markdown-italic-face))) . -1647)) nil (25516 3399 293775 735000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-unmatched-face markdown-italic-face))) . 1647) (#("0" 0 1 (fontified t face (markdown-italic-face))) . 1647) (#("." 0 1 (fontified t face (markdown-italic-face))) . 1647) (#("2" 0 1 (fontified t face (markdown-italic-face))) . 1647) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face markdown-italic-face))) . 1647) (undo-tree-id0 . 1) (undo-tree-id1 . -1) (undo-tree-id2 . 1) (undo-tree-id3 . -1)) nil (25516 3399 293773 145000) 0 nil])
([nil nil ((nil rear-nonsticky nil 326 . 327) (nil fontified nil 130 . 327) (130 . 327) (t 25516 3399 307186 680000)) nil (25516 3608 434776 410000) 0 nil])
([nil nil ((#("M" 0 1 (foreign-selection STRING fontified t markdown-list-item ((71 256 0 2 "- " nil (71 73 71 71 71 72 72 73))))) . 130)) nil (25516 3608 434775 930000) 0 nil])
([nil nil ((130 . 131)) nil (25516 3608 434775 660000) 0 nil])
([nil nil ((129 . 145)) nil (25516 3608 434775 340000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t markdown-list-item ((71 272 0 2 "- " nil (71 73 71 71 71 72 72 73))))) . -144) (undo-tree-id30 . -1) 145) nil (25516 3608 434774 930000) 0 nil])
([nil nil ((273 . 274) (#("*" 0 1 (foreign-selection STRING fontified nil)) . -273) (273 . 274)) nil (25516 3608 434774 0) 0 nil])
([nil nil ((#("c" 0 1 (foreign-selection STRING fontified t font-lock-multiline t face (markdown-italic-face))) . 303) (#("1" 0 1 (foreign-selection STRING fontified t font-lock-multiline t face (markdown-italic-face))) . 303) (#("0" 0 1 (foreign-selection STRING fontified t font-lock-multiline t face (markdown-italic-face))) . 303) (#("2" 0 1 (foreign-selection STRING fontified t font-lock-multiline t face (markdown-italic-face))) . 303) (#("u" 0 1 (foreign-selection STRING fontified t font-lock-multiline t face (markdown-italic-face))) . 303) (#("\\" 0 1 (foreign-selection STRING fontified t font-lock-multiline t face (markdown-italic-face))) . 303)) nil (25516 3608 434773 380000) 0 nil])
([nil nil ((#("d" 0 1 (foreign-selection STRING fontified t font-lock-multiline t face (markdown-italic-face))) . 304) (#("1" 0 1 (foreign-selection STRING fontified t font-lock-multiline t face (markdown-italic-face))) . 304) (#("0" 0 1 (foreign-selection STRING fontified t font-lock-multiline t face (markdown-italic-face))) . 304) (#("2" 0 1 (foreign-selection STRING fontified t font-lock-multiline t face (markdown-italic-face))) . 304) (#("u" 0 1 (foreign-selection STRING fontified t font-lock-multiline t face (markdown-italic-face))) . 304) (#("\\" 0 1 (foreign-selection STRING fontified t font-lock-multiline t face (markdown-italic-face))) . 304)) nil (25516 3608 434772 589000) 0 nil])
([nil nil ((#(" " 0 1 (foreign-selection STRING fontified t font-lock-multiline t face (markdown-italic-face))) . -304)) nil (25516 3608 434771 879000) 0 nil])
([nil nil ((#(")" 0 1 (foreign-selection STRING fontified t font-lock-multiline t face (rainbow-delimiters-unmatched-face markdown-italic-face))) . 304) (#("0" 0 1 (foreign-selection STRING fontified t font-lock-multiline t face (markdown-italic-face))) . 304) (#("." 0 1 (foreign-selection STRING fontified t font-lock-multiline t face (markdown-italic-face))) . 304) (#("2" 0 1 (foreign-selection STRING fontified t font-lock-multiline t face (markdown-italic-face))) . 304) (#("(" 0 1 (foreign-selection STRING fontified t font-lock-multiline t face (rainbow-delimiters-depth-1-face markdown-italic-face))) . 304) (undo-tree-id28 . 1) (undo-tree-id29 . -1)) nil (25516 3608 434771 59000) 0 nil])
([nil nil ((325 . 326)) nil (25516 3608 434762 639000) 0 nil])
([nil nil ((326 . 328) (#("*" 0 1 (foreign-selection STRING fontified nil font-lock-multiline t face (markdown-italic-face))) . -326) (325 . 327)) nil (25516 3608 434762 159000) 0 nil])
([nil nil ((327 . 328)) nil (25516 3608 434761 549000) 0 nil])
([nil nil ((#("* the study of curves and surfaces in three dimensional space. We will introduces the basic methods of
   vector calculus: multi-variable functions, different notions of derivatives of such functions and different notions
   of integrating functions on curves and surfaces. We will introduce Curl, Divergence and Stoke's
   formula. 
   
   *Prerequisites: MATH 122 with C  or better, or consent.*
" 0 1 (fontified t markdown-list-item ((328 725 0 2 "* " nil (328 330 328 328 328 329 329 330))) face markdown-list-face) 1 2 (foreign-selection STRING fontified t markdown-list-item ((328 725 0 2 "* " nil (328 330 328 328 328 329 329 330)))) 2 102 (fontified t markdown-list-item ((328 725 0 2 "* " nil (328 330 328 328 328 329 329 330)))) 102 103 (fontified t markdown-list-item ((328 725 0 2 "* " nil (328 330 328 328 328 329 329 330))) font-lock-multiline t) 103 341 (fontified t markdown-list-item ((328 725 0 2 "* " nil (328 330 328 328 328 329 329 330)))) 341 342 (fontified t markdown-list-item ((328 725 0 2 "* " nil (328 330 328 328 328 329 329 330))) invisible markdown-markup face (markdown-markup-face)) 342 396 (fontified t markdown-list-item ((328 725 0 2 "* " nil (328 330 328 328 328 329 329 330))) face (markdown-italic-face)) 396 397 (fontified t markdown-list-item ((328 725 0 2 "* " nil (328 330 328 328 328 329 329 330))) invisible markdown-markup face (markdown-markup-face)) 397 398 (fontified t)) . -328) (undo-tree-id12 . -222) (undo-tree-id13 . -222) (undo-tree-id14 . -321) (undo-tree-id15 . -321) (undo-tree-id16 . -334) (undo-tree-id17 . -334) (undo-tree-id18 . -338) (undo-tree-id19 . -338) (undo-tree-id20 . -398) (undo-tree-id21 . -398) (undo-tree-id22 . -398) (undo-tree-id23 . -398) (undo-tree-id24 . -117) (undo-tree-id25 . -7) (undo-tree-id26 . -6) (undo-tree-id27 . -398) 726) nil (25516 3608 434758 239000) 0 nil])
([nil nil ((110 . 118) (#("    " 0 4 (fontified t markdown-list-item ((71 271 0 2 "- " nil (71 73 71 71 71 72 72 73))))) . 110) 222 (t 25516 3608 440864 367000)) nil (25516 3625 779991 92000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t markdown-list-item ((71 275 0 2 "- " nil (71 73 71 71 71 72 72 73))) markdown-pre (110 275) face markdown-pre-face)) . -116) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -1) (undo-tree-id34 . -2) (undo-tree-id35 . -1) (undo-tree-id36 . -1)) nil (25516 3625 779990 192000) 0 nil])
([nil nil ((275 . 279) 279) nil (25516 3625 779978 512000) 0 nil])
([nil nil ((71 . 72) (t 25516 3625 793003 563000)) nil (25516 3652 431620 772000) 0 nil])
([nil nil ((#("      " 0 6 (markdown-list-item ((72 334 0 2 "- " nil (72 74 72 72 72 73 73 74))) fontified t)) . -111)) nil (25516 3652 431620 102000) 0 nil])
([nil nil ((111 . 112)) nil (25516 3652 431616 822000) 0 nil])
([nil nil ((329 . 334) (t 25516 3652 445217 370000)) nil (25516 3695 140403 360000) 0 nil])
([nil nil ((#("
 " 0 2 (fontified t)) . -110) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2)) nil (25516 3695 140401 310000) 0 nil])
([nil nil ((46 . 47) (t 25516 3695 153559 971000)) nil (25516 3714 763953 897000) 0 nil])
([nil nil ((5 . 6)) nil (25516 3714 763949 997000) 0 nil])
([nil nil ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . -335) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -1) (t 25516 3714 777717 580000)) nil (25516 3807 958055 517000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t markdown-list-item ((74 328 0 2 "- " nil (74 76 74 74 74 75 75 76))) font-lock-multiline t invisible markdown-markup face (markdown-markup-face))) . 76) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . 1) (undo-tree-id55 . -1) (#("*" 0 1 (markdown-list-item ((74 329 0 2 "- " nil (74 76 74 74 74 75 75 76))) fontified t invisible markdown-markup face (markdown-markup-face))) . 76) (undo-tree-id56 . 1) (t 25516 3807 974469 585000)) nil (25516 4059 415783 823000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t markdown-list-item ((74 326 0 2 "- " nil (74 76 74 74 74 75 75 76))) font-lock-multiline t)) . 102) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("*" 0 1 (fontified t markdown-list-item ((74 327 0 2 "- " nil (74 76 74 74 74 75 75 76))))) . 102)) nil (25516 4059 415780 653000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil markdown-list-item ((74 326 0 2 "- " nil (74 76 74 74 74 75 75 76))))) . -103) (102 . 103)) nil (25516 4059 415767 653000) 0 nil])
([nil nil ((606 . 607) (#("  " 0 2 (fontified nil)) . -606) (605 . 606) (t 25516 4059 428498 536000)) nil (25516 4073 959308 671000) 0 nil])
([nil nil ((78 . 80) (#("*" 0 1 (fontified nil markdown-list-item ((74 328 0 2 "- " nil (74 76 74 74 74 75 75 76))))) . 78) (76 . 78) (#("**" 0 2 (fontified nil markdown-list-item ((74 328 0 2 "- " nil (74 76 74 74 74 75 75 76))))) . -76) (undo-tree-id137 . -1) (77 . 78) (76 . 78) (#("*" 0 1 (fontified nil markdown-list-item ((74 326 0 2 "- " nil (74 76 74 74 74 75 75 76))))) . -76) (76 . 77) (t 25516 4073 972615 909000)) nil (25516 4136 8406 974000) 0 nil])
([nil nil ((#("    " 0 4 (foreign-selection STRING fontified nil markdown-pre (266 325))) . -266) (#("    " 0 4 (fontified t markdown-list-item ((74 328 0 2 "- " nil (74 76 74 74 74 75 75 76))))) . -107) (328 . 329) (#("*" 0 1 (fontified t markdown-list-item ((74 329 0 2 "- " nil (74 76 74 74 74 75 75 76))) invisible markdown-markup face (markdown-markup-face))) . -78)) nil (25516 4136 8406 174000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t markdown-list-item ((74 328 0 2 "- " nil (74 76 74 74 74 75 75 76))) invisible markdown-markup face (markdown-markup-face))) . 78)) nil (25516 4136 8405 844000) 0 nil])
([nil nil ((104 . 105) (104 . 106) (#("*" 0 1 (fontified nil markdown-list-item ((74 105 0 2 "- " nil (74 76 74 74 74 75 75 76))))) . -104) (undo-tree-id136 . -1) (#("*" 0 1 (fontified nil markdown-list-item ((74 106 0 2 "- " nil (74 76 74 74 74 75 75 76))))) . -105) (104 . 106)) nil (25516 4136 8405 584000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t markdown-list-item ((74 107 0 2 "- " nil (74 76 74 74 74 75 75 76))) invisible markdown-markup face (markdown-markup-face))) . 105)) nil (25516 4136 8404 994000) 0 nil])
([nil nil ((#("*" 0 1 (fontified nil invisible markdown-markup face (markdown-markup-face))) . -320) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (#("*" 0 1 (fontified t)) . -321) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 322) nil (25516 4136 8404 444000) 0 nil])
([nil nil ((320 . 322) (#("(" 0 1 (foreign-selection STRING fontified nil)) . -320) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (320 . 321)) nil (25516 4136 8341 903000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -320) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -321) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . 1) (undo-tree-id102 . 1) (undo-tree-id103 . -1) (undo-tree-id104 . 1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) 322) nil (25516 4136 8340 563000) 0 nil])
([nil nil ((320 . 322) (#("*" 0 1 (foreign-selection STRING fontified nil)) . -320) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (320 . 321)) nil (25516 4136 8327 793000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 321) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . 1) (undo-tree-id60 . -1)) nil (25516 4136 8324 173000) 0 nil])
([nil nil ((108 . 112) (t 25516 4136 21116 591000)) nil (25516 4144 56359 171000) 0 nil])
([nil nil ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . -107) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -5) (undo-tree-id151 . -1) (undo-tree-id152 . -5) (undo-tree-id153 . -5) (undo-tree-id154 . -5) (undo-tree-id155 . -5)) nil (25516 4144 56357 461000) 0 nil])
([nil nil ((107 . 109)) nil (25516 4144 56330 691000) 0 nil])
([nil nil ((268 . 272) (t 25516 4144 69181 538000)) nil (25516 4149 559194 135000) 0 nil])
([nil nil ((#("
  " 0 3 (fontified t markdown-list-item ((332 605 0 2 "- " nil (332 334 332 332 332 333 333 334))))) . -393) (undo-tree-id176 . -1) (t 25516 4149 573225 951000)) nil (25516 4208 656828 327000) 0 nil])
([nil nil ((393 . 414)) nil (25516 4208 656827 517000) 0 nil])
([nil nil ((414 . 416)) nil (25516 4208 656827 207000) 0 nil])
([nil nil ((nil rear-nonsticky nil 696 . 697) (nil fontified nil 392 . 697) (392 . 697) (#(" In this course we will Logic, proof techniques, set theory, relations, functions, cardinality, operations, and an introduction to mathematical structures and number theory." 0 173 (fontified t markdown-list-item ((332 625 0 2 "- " nil (332 334 332 332 332 333 333 334))))) . -392) (undo-tree-id174 . -173) (undo-tree-id175 . -173) 565) nil (25516 4208 656826 717000) 0 nil])
([nil nil ((#("n" 0 1 (foreign-selection STRING fontified t markdown-list-item ((332 749 0 2 "- " nil (332 334 332 332 332 333 333 334))) font-lock-multiline t)) . -448) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (#("e" 0 1 (foreign-selection STRING fontified t markdown-list-item ((332 750 0 2 "- " nil (332 334 332 332 332 333 333 334))) font-lock-multiline t)) . -449) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (#("e" 0 1 (foreign-selection STRING fontified t markdown-list-item ((332 751 0 2 "- " nil (332 334 332 332 332 333 333 334))))) . -450) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (#("d" 0 1 (foreign-selection STRING fontified t markdown-list-item ((332 752 0 2 "- " nil (332 334 332 332 332 333 333 334))) font-lock-multiline t)) . -451) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#("e" 0 1 (foreign-selection STRING fontified t markdown-list-item ((332 753 0 2 "- " nil (332 334 332 332 332 333 333 334))) font-lock-multiline t)) . -452) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (#("d" 0 1 (foreign-selection STRING fontified t markdown-list-item ((332 754 0 2 "- " nil (332 334 332 332 332 333 333 334))))) . -453) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#(" " 0 1 (foreign-selection STRING fontified t markdown-list-item ((332 755 0 2 "- " nil (332 334 332 332 332 333 333 334))) font-lock-multiline t)) . -454) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (#("i" 0 1 (foreign-selection STRING fontified t markdown-list-item ((332 756 0 2 "- " nil (332 334 332 332 332 333 333 334))) font-lock-multiline t)) . -455) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#("n" 0 1 (foreign-selection STRING fontified t markdown-list-item ((332 757 0 2 "- " nil (332 334 332 332 332 333 333 334))))) . -456) (undo-tree-id172 . -1) (undo-tree-id173 . -1) 457) nil (25516 4208 656824 17000) 0 nil])
([nil nil ((448 . 469)) nil (25516 4208 656807 136000) 0 nil])
([nil nil ((469 . 470)) nil (25516 4208 656803 716000) 0 nil])
([nil nil ((#("<span style=\"color:red\">[!! FIX IT !!]</span>" 0 1 (fontified t face markdown-html-tag-delimiter-face) 1 5 (fontified t face markdown-html-tag-name-face) 5 6 (fontified t) 6 11 (fontified t face markdown-html-attr-name-face) 11 12 (fontified t face markdown-html-tag-delimiter-face) 12 23 (fontified t face markdown-html-attr-value-face) 23 24 (fontified t face markdown-html-tag-delimiter-face) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-1-face)) 38 40 (fontified t face markdown-html-tag-delimiter-face) 40 44 (fontified t face markdown-html-tag-name-face) 44 45 (fontified t face markdown-html-tag-delimiter-face)) . 773) (undo-tree-id204 . -19) (undo-tree-id205 . -19) (undo-tree-id206 . -45) (t 25516 4208 669702 813000)) nil (25516 4219 392628 33000) 0 nil])
([nil nil ((#("
  
" 0 1 (fontified t) 1 4 (fontified t)) . -773) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -1) (undo-tree-id182 . -3) (undo-tree-id183 . -3) (undo-tree-id184 . -3) (undo-tree-id185 . -3) (undo-tree-id186 . -3) (undo-tree-id187 . -3) (undo-tree-id188 . -3) (undo-tree-id189 . -3) (undo-tree-id190 . -3) (undo-tree-id191 . -3) (undo-tree-id192 . -3) (undo-tree-id193 . -3) (undo-tree-id194 . -3) (undo-tree-id195 . -3) (undo-tree-id196 . -3) (undo-tree-id197 . -3) (undo-tree-id198 . -3) (undo-tree-id199 . -3) (undo-tree-id200 . -3) (undo-tree-id201 . -3) (undo-tree-id202 . -3) (undo-tree-id203 . -3)) nil (25516 4219 392624 933000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -772) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (t 25516 4219 405789 440000)) nil (25516 4226 920425 9000) 0 nil])
([nil nil ((803 . 804) (t 25516 4226 933850 183000)) nil (25516 4252 409075 632000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1234 . 1235) (nil fontified nil 804 . 1235) (804 . 1235)) nil (25516 4252 409075 72000) 0 nil])
([nil nil ((1234 . 1236) (#("*" 0 1 (foreign-selection STRING fontified nil)) . -1234) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (1234 . 1235)) nil (25516 4252 409074 532000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 1235) (undo-tree-id249 . -1) (undo-tree-id250 . -1)) nil (25516 4252 409072 842000) 0 nil])
([nil nil ((1150 . 1151)) nil (25516 4252 409062 101000) 0 nil])
([nil nil ((#("<span style=\"color:red\">[!! FIX IT !!]</span>" 0 1 (fontified t face markdown-html-tag-delimiter-face) 1 5 (fontified t face markdown-html-tag-name-face) 5 6 (fontified t) 6 11 (fontified t face markdown-html-attr-name-face) 11 12 (fontified t face markdown-html-tag-delimiter-face) 12 23 (fontified t face markdown-html-attr-value-face) 23 24 (fontified t face markdown-html-tag-delimiter-face) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-1-face)) 38 40 (fontified t face markdown-html-tag-delimiter-face) 40 44 (fontified t face markdown-html-tag-name-face) 44 45 (fontified t face markdown-html-tag-delimiter-face)) . 1239) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -45) (t 25516 4252 482056 333000)) nil (25516 4261 379949 423000) 0 nil])
([nil nil ((804 . 806) (t 25516 4261 382128 144000)) nil (25516 4288 994849 613000) 0 nil])
([nil nil ((806 . 812)) nil (25516 4288 994849 343000) 0 nil])
([nil nil ((#("(real" 0 1 (foreign-selection STRING fontified t markdown-list-item ((772 1156 0 2 "- " nil (772 774 772 772 772 773 773 774))) face (rainbow-delimiters-depth-1-face)) 1 5 (foreign-selection STRING fontified t markdown-list-item ((772 1156 0 2 "- " nil (772 774 772 772 772 773 773 774))))) . 832) (undo-tree-id264 . 5) (undo-tree-id265 . -1)) nil (25516 4288 994849 83000) 0 nil])
([nil nil ((#(" numbers" 0 8 (foreign-selection STRING fontified t markdown-list-item ((772 1151 0 2 "- " nil (772 774 772 772 772 773 773 774))))) . 832)) nil (25516 4288 994848 23000) 0 nil])
([nil nil ((#(", exponents" 0 11 (foreign-selection STRING fontified t markdown-list-item ((772 1143 0 2 "- " nil (772 774 772 772 772 773 773 774))))) . 832)) nil (25516 4288 994847 843000) 0 nil])
([nil nil ((#(", polynomials" 0 13 (foreign-selection STRING fontified t markdown-list-item ((772 1132 0 2 "- " nil (772 774 772 772 772 773 773 774))))) . 832)) nil (25516 4288 994847 653000) 0 nil])
([nil nil ((#(", rational" 0 10 (foreign-selection STRING fontified t markdown-list-item ((772 1119 0 2 "- " nil (772 774 772 772 772 773 773 774))))) . 832)) nil (25516 4288 994847 493000) 0 nil])
([nil nil ((#(" expressions" 0 12 (foreign-selection STRING fontified t markdown-list-item ((772 1109 0 2 "- " nil (772 774 772 772 772 773 773 774))))) . 832)) nil (25516 4288 994847 293000) 0 nil])
([nil nil ((#(")" 0 1 (foreign-selection STRING fontified t markdown-list-item ((772 1097 0 2 "- " nil (772 774 772 772 772 773 773 774))) face (rainbow-delimiters-unmatched-face))) . 832)) nil (25516 4288 994846 973000) 0 nil])
([nil nil ((#(" " 0 1 (foreign-selection STRING fontified t markdown-list-item ((772 1096 0 2 "- " nil (772 774 772 772 772 773 773 774))))) . -831) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) 832) nil (25516 4288 994844 563000) 0 nil])
([nil nil ((1097 . 1101) 1124 (t 25516 4289 10351 70000)) nil (25516 4296 27224 136000) 0 nil])
([nil nil ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . -1190) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -2) (undo-tree-id269 . -2) (undo-tree-id270 . -1)) nil (25516 4296 27221 726000) 0 nil])
([nil nil ((918 . 920) (#(" " 0 1 (foreign-selection STRING fontified nil font-lock-multiline t markdown-list-item ((772 1190 0 2 "- " nil (772 774 772 772 772 773 773 774))))) . 918) (917 . 918) (1021 . 1023) (t 25516 4296 42407 813000)) nil (25516 4335 421631 507000) 0 nil])
([nil nil ((1025 . 1028)) nil (25516 4335 421631 27000) 0 nil])
([nil nil ((#(", conic sections, sequences and series, probability, and binomial theorem." 0 74 (foreign-selection STRING fontified t markdown-list-item ((772 1195 0 2 "- " nil (772 774 772 772 772 773 773 774))))) . 1028) (undo-tree-id271 . -39) (undo-tree-id272 . -39) (undo-tree-id273 . -39) (undo-tree-id274 . -74) (undo-tree-id275 . -74) (undo-tree-id276 . -74) (undo-tree-id277 . -74) (undo-tree-id278 . -74) (undo-tree-id279 . -74) (undo-tree-id280 . -74)) nil (25516 4335 421628 747000) 0 nil])
([nil nil ((#("
    " 0 1 (foreign-selection STRING markdown-list-item ((772 1121 0 2 "- " nil (772 774 772 772 772 773 773 774))) fontified t) 1 5 (foreign-selection STRING markdown-list-item ((772 1121 0 2 "- " nil (772 774 772 772 772 773 773 774))) fontified t)) . -1029) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (t 25516 4335 438725 700000)) nil (25516 4376 181279 159000) 0 nil])
([nil nil ((1029 . 1031)) nil (25516 4376 181277 949000) 0 nil])
([nil nil ((803 . 804)) nil (25516 4376 181277 679000) 0 nil])
([nil nil ((804 . 806)) nil (25516 4376 181277 399000) 0 nil])
([nil nil ((806 . 808) (#("(" 0 1 (fontified nil markdown-list-item ((772 1122 0 2 "- " nil (772 774 772 772 772 773 773 774))))) . -806) (806 . 807)) nil (25516 4376 181277 89000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t markdown-list-item ((772 1122 0 2 "- " nil (772 774 772 772 772 773 773 774))) face (rainbow-delimiters-depth-1-face))) . -806) (undo-tree-id299 . -1) (#(")" 0 1 (fontified t markdown-list-item ((772 1123 0 2 "- " nil (772 774 772 772 772 773 773 774))) face (rainbow-delimiters-depth-1-face))) . -807) (undo-tree-id300 . -1) (undo-tree-id301 . 1) (undo-tree-id302 . -1) 808) nil (25516 4376 181276 519000) 0 nil])
([nil nil ((#("
  " 0 1 (fontified t markdown-list-item ((772 1121 0 2 "- " nil (772 774 772 772 772 773 773 774)))) 1 3 (fontified t markdown-list-item ((772 1121 0 2 "- " nil (772 774 772 772 772 773 773 774))))) . -806) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1)) nil (25516 4376 181274 969000) 0 nil])
([nil nil ((#(" <span style=\"color:red\">[!! FIX IT !!]</span>" 0 1 (markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) fontified t) 1 2 (markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) fontified t face markdown-html-tag-delimiter-face) 2 6 (markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) fontified t face markdown-html-tag-name-face) 6 7 (markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) fontified t) 7 11 (markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) fontified t face markdown-html-attr-name-face) 11 12 (markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) fontified t face markdown-html-attr-name-face) 12 13 (markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) fontified t face markdown-html-tag-delimiter-face) 13 24 (markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) fontified t face markdown-html-attr-value-face) 24 25 (markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) fontified t face markdown-html-tag-delimiter-face) 25 26 (markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) fontified t face (rainbow-delimiters-depth-1-face)) 26 29 (markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) fontified t) 29 38 (markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) fontified t) 38 39 (markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) fontified t face (rainbow-delimiters-depth-1-face)) 39 41 (markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) fontified t face markdown-html-tag-delimiter-face) 41 45 (markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) fontified t face markdown-html-tag-name-face) 45 46 (markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) fontified t face markdown-html-tag-delimiter-face)) . 1898) (undo-tree-id294 . -46)) nil (25516 4376 181273 609000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1943 . 1944) (nil fontified nil 1943 . 1944) (nil fontified nil 1939 . 1943) (nil fontified nil 1937 . 1939) (nil fontified nil 1936 . 1937) (nil fontified nil 1927 . 1936) (nil fontified nil 1924 . 1927) (nil fontified nil 1923 . 1924) (nil fontified nil 1922 . 1923) (nil fontified nil 1911 . 1922) (nil fontified nil 1910 . 1911) (nil fontified nil 1909 . 1910) (nil fontified nil 1905 . 1909) (nil fontified nil 1904 . 1905) (nil fontified nil 1900 . 1904) (nil fontified nil 1899 . 1900) (nil fontified nil 1898 . 1899) (1898 . 1944)) nil (25516 4376 181272 559000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2210 . 2211) (nil fontified nil 2210 . 2211) (nil fontified nil 2209 . 2210) (nil invisible markdown-markup 2208 . 2209) (nil fontified nil 2208 . 2209) (nil fontified nil 2124 . 2208) (nil invisible markdown-markup 2123 . 2124) (nil fontified nil 2123 . 2124) (nil fontified nil 2120 . 2123) (nil fontified nil 2118 . 2120) (nil fontified nil 2117 . 2118) (nil fontified nil 2012 . 2117) (nil fontified nil 2010 . 2012) (nil fontified nil 1923 . 2010) (nil fontified nil 1904 . 1923) (nil fontified nil 1898 . 1904) (1898 . 2211) (#(" <span style=\"color:red\">[!! FIX IT !!]</span>" 0 1 (fontified t markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868)))) 1 2 (fontified t markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) face markdown-html-tag-delimiter-face) 2 6 (fontified t markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) face markdown-html-tag-name-face) 6 7 (fontified t markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868)))) 7 11 (fontified t markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) face markdown-html-attr-name-face) 11 12 (fontified t markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) face markdown-html-attr-name-face) 12 13 (fontified t markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) face markdown-html-tag-delimiter-face) 13 24 (fontified t markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) face markdown-html-attr-value-face) 24 25 (fontified t markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) face markdown-html-tag-delimiter-face) 25 26 (fontified t markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) face (rainbow-delimiters-depth-1-face)) 26 29 (fontified t markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868)))) 29 38 (fontified t markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868)))) 38 39 (fontified t markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) face (rainbow-delimiters-depth-1-face)) 39 41 (fontified t markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) face markdown-html-tag-delimiter-face) 41 45 (fontified t markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) face markdown-html-tag-name-face) 45 46 (fontified t markdown-list-item ((1864 1944 2 4 "- " nil (1864 1868 1864 1866 1866 1867 1867 1868))) face markdown-html-tag-delimiter-face)) . -1898) (undo-tree-id289 . -46) (undo-tree-id290 . -46) (undo-tree-id291 . -46) (undo-tree-id292 . -46) (undo-tree-id293 . -46) 1944) nil (25516 4376 181271 239000) 0 nil])
([nil nil ((1898 . 1899)) nil (25516 4376 181268 729000) 0 nil])
([nil nil ((#(" 
      " 0 8 (markdown-list-item ((1593 1857 2 4 "- " nil (1593 1597 1593 1595 1595 1596 1596 1597))) fontified t)) . -1640) (undo-tree-id281 . -2) (undo-tree-id282 . -2) (undo-tree-id283 . -2) (undo-tree-id284 . -2) (undo-tree-id285 . -2) (undo-tree-id286 . -3) (undo-tree-id287 . -3) (undo-tree-id288 . -3)) nil (25516 4376 181268 59000) 0 nil])
([nil nil ((1640 . 1641)) nil (25516 4376 181254 819000) 0 nil])
([nil nil ((#("
     " 0 6 (markdown-list-item ((1142 1590 1 3 "- " nil (1142 1145 1142 1143 1143 1144 1144 1145))) fontified t)) . -1174) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -3) (undo-tree-id310 . -3) (undo-tree-id311 . -3) (t 25516 4376 199054 591000)) nil (25516 4382 885660 716000) 0 nil])
([nil nil ((1174 . 1176)) nil (25516 4382 885648 386000) 0 nil])
([nil nil ((2111 . 2117) (#("  " 0 2 (foreign-selection STRING fontified t)) . 2111) (undo-tree-id312 . -2) (undo-tree-id313 . -2) (undo-tree-id314 . -2) (undo-tree-id315 . -2) (undo-tree-id316 . -2) (undo-tree-id317 . -2) (undo-tree-id318 . -2) (undo-tree-id319 . -2) (undo-tree-id320 . -2) (undo-tree-id321 . -2) 2113 (t 25516 4382 903108 683000)) nil (25516 4397 693770 476000) 0 nil])
([nil nil ((109 . 112) (t 25516 4397 711228 169000)) nil (25516 4418 13677 74000) 0 nil])
([nil nil ((395 . 397)) nil (25516 4418 13676 594000) 0 nil])
([nil nil ((810 . 811)) nil (25516 4418 13673 54000) 0 nil])
([nil nil ((811 . 816) (#(" " 0 1 (fontified t)) . 811) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) 812 (t 25516 4418 31392 124000)) nil (25516 4420 764536 815000) 0 nil])
([nil nil ((396 . 401) (#(" " 0 1 (fontified t)) . 396) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) 397 (t 25516 4420 779414 299000)) nil (25516 4433 438631 448000) 0 nil])
([nil nil ((110 . 116) (#("  " 0 2 (fontified t markdown-list-item ((74 329 0 2 "- " nil (74 76 74 74 74 75 75 76))))) . 110) (undo-tree-id329 . -2) (undo-tree-id330 . -2) (undo-tree-id331 . -2) 112) nil (25516 4433 438628 188000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t markdown-list-item ((74 333 0 2 "- " nil (74 76 74 74 74 75 75 76))))) . -112) (undo-tree-id335 . -4) (undo-tree-id336 . -4) (undo-tree-id337 . -4) (undo-tree-id338 . -4) (undo-tree-id339 . -4) (undo-tree-id340 . -4) 116 (t 25516 4433 455516 579000)) nil (25516 4436 678509 688000) 0 nil])
([nil nil ((1191 . 1192) (1189 . 1190) (t 25516 4436 695542 721000)) nil (25516 4449 230007 516000) 0 nil])
([nil nil ((1190 . 1196) (#("  " 0 2 (fontified t)) . 1190) (undo-tree-id348 . -2) (undo-tree-id349 . -2) (undo-tree-id350 . -2) (undo-tree-id351 . -2) 1192) nil (25516 4449 230007 36000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t markdown-list-item ((1156 1606 1 3 "- " nil (1156 1159 1156 1157 1157 1158 1158 1159))))) . -1192) (undo-tree-id343 . -4) (undo-tree-id344 . -4) (undo-tree-id345 . -4) (undo-tree-id346 . -4) (undo-tree-id347 . -4) 1196) nil (25516 4449 230004 916000) 0 nil])
([nil nil ((1651 . 1655) (#("  " 0 2 (markdown-list-item ((1605 1862 2 4 "- " nil (1605 1609 1605 1607 1607 1608 1608 1609))) fontified t)) . 1651) (undo-tree-id341 . -2) (undo-tree-id342 . -2) 1653) nil (25516 4449 230001 696000) 0 nil])
([nil nil ((1655 . 1660)) nil (25516 4449 229991 906000) 0 nil])
([nil nil ((1190 . 1196) (#("  " 0 2 (fontified t)) . 1190) (undo-tree-id352 . -2) (undo-tree-id353 . -2) (undo-tree-id354 . -2) (undo-tree-id355 . -2) (undo-tree-id356 . -2) (undo-tree-id357 . -2) (undo-tree-id358 . -2) 1192 (t 25516 4449 247643 997000)) nil (25516 4454 717919 925000) 0 nil])
([nil nil ((1915 . 1917) (t 25516 4454 743688 341000)) nil (25516 4465 278963 179000) 0 nil])
([nil nil ((1916 . 1921) (#(" " 0 1 (fontified t)) . 1916) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) 1917) nil (25516 4465 278960 898000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t markdown-yaml-metadata-section (4 49))) . -5) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (t 25516 4465 295773 485000)) nil (25516 5798 435516 902000) 0 nil])
([nil current ((#("
" 0 1 (fontified t markdown-yaml-metadata-section (5 48))) . -47) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1)) nil (25516 5798 435510 332000) 0 nil])
nil
